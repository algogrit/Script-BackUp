#! /usr/bin/env ruby

start_time=Time.now

require 'time'

comparing_branch = ARGV.first || "master"

branch_names = (`git branch -r | grep -v "origin/#{comparing_branch}" | awk '{print $1}'`).split("\n")

remote_branches = branch_names.reduce({}) do |memo, branch|
	timestamp = Time.parse(`git log --date=local --pretty=format:"%ad" -1 #{branch}`)
	memo[branch] = timestamp
	memo
end

def print_branch_details(comparing_branch, branch, timestamp, count, size)
	puts "\033[1;33mOn branch \033[1;35m#{count}/#{size}\033[1;33m - \033[1;35m#{branch}\033[0m"

	puts "\033[1;31mLast Updated\t-\033[0m\t#{timestamp}"

	author = `git log --date=local --pretty=format:"%an" -1 #{branch}`
	puts "\033[1;31mAuthor\t-\033[0m\t#{author}"

	ahead_commit_count = `git log --oneline origin/#{comparing_branch}..#{branch} | wc | awk '{print $1}'`.strip
	behind_commit_count = `git log --oneline #{branch}..origin/#{comparing_branch} | wc | awk '{print $1}'`.strip
	puts "\033[1;31mMaster diff\t-\033[0m\t#{"+" + ahead_commit_count + " / -" + behind_commit_count}"

	puts "\n"
end

count = 0
remote_branches.sort_by{|branch, timestamp| timestamp}.each do |branch, timestamp|
	count += 1
	print_branch_details(comparing_branch, branch, timestamp, count, remote_branches.size)
end

puts "\033[1;31mgit swamp took #{Time.now - start_time} sec(s).\033[0m"
